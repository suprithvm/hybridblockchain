# Start from golang base image
FROM golang:1.23.3-alpine as builder

# Add git and build essentials for dependencies
RUN apk add --no-cache git gcc musl-dev

# Set working directory
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the entire project
COPY . .

# Build the bootnode binary
RUN CGO_ENABLED=0 GOOS=linux go build -o bootnode

# Start a new stage with minimal image
FROM alpine:latest

# Add CA certificates and necessary tools
RUN apk add --no-cache ca-certificates tzdata curl

WORKDIR /root/

# Create necessary directories
RUN mkdir -p /root/bootnode_data /root/keys /root/peerstore

# Copy the binary from builder
COPY --from=builder /app/bootnode /usr/local/bin/bootnode

# Expose the default port for both TCP and UDP
EXPOSE 50505/tcp
EXPOSE 50505/udp

# Set environment variables
ENV NODE_ROLE=bootnode \
    NODE_PORT=50505 \
    DATA_DIR=/root/bootnode_data \
    KEY_FILE=/root/keys/node.key \
    PEER_STORE=/root/peerstore/peers.json \
    ENABLE_NAT=true \
    ENABLE_METRICS=true \
    ENABLE_PEER_EXCHANGE=true

# Run the bootnode with proper configuration
ENTRYPOINT ["/usr/local/bin/bootnode"]
CMD ["--role", "bootstrap", \
     "--listen", ":50505", \
     "--datadir", "/root/bootnode_data", \
     "--network", "testnet", \
     "--metrics", \
     "--loglevel", "debug"] 